#!/bin/sh

# Build ebaz.v into a bitstream, using either Vivado or f4pga.
# FIXME: support nextpnr-xilinx as well
# Currently, HDMI only works well in Vivado.  In fact, unless MMCM gets
# supported, I can't see any reason to use the free tools.

odir=build-ebaz
rm -rf $odir
./mkpll >pll.v
#ULX_DIR=../../ulx3s-misc/examples
#LCD_DIR=${ULX_DIR}/spi_display/hdl/spi_display_verilog
#DVI_DIR=${ULX_DIR}/dvi/hdl
LCD_DIR=ulx3s-misc
DVI_DIR=ulx3s-misc
#UART_DIR=$HOME/fpga/j1c/verilog
UART_DIR=j1c
#LIB_DIR=${HOME}/fpga/lib
LIB_DIR=..
# hdmidelay uses double-packed array, not suppored by vhd2vl?
for x in av_hdmi encoder; do
   vhd2vl hdmi-audio/$x.vhd >hdmi-audio/$x.v
done
case "$1" in
 -v)
  # Build using Vivado
  # As of now:
  #  Vivado 2017.2 barfs on my zynq macro library
  # Vivado 2022.1, 2022.2 crash in GUI on trying to start processing.
  #   I guess this is what finally motivated me to try a TCL script, but:
  # Vivado 2022.1, 2022.2 crash on completion of routing (corrupted memory?)
  # Well, at least running in Vivado told me some useful things, like:
  #   apparently, my low limit for VCO freq in xc7-pll was wrong.
  #   xc7-pll was also basically ignoring the VCO low limit, right or wrong
  #   there are numerous (137 reported) potential timing glitches
  # Vivado seems to eventually create this itself, but not before complaining
  mkdir -p $odir
  # 2022 crashes, so make it 2017 compatible
  # There seems to be no way to control where this goes
  rm -f tight_setup_hold_pins.txt usage_statistics_webtalk.{xml,html}
  #. /opt/Xilinx/Vivado/2022.2/settings64.sh
  # Note that for me, "vivado" is a wrapper script that performs the above,
  # as well as disabling 'net access and supporting 3 versions: 2022.1,
  # 2022.2 (-n), and 2017.2 (-o).  Since 2022 crashes after routing, I'm
  # using 2017.2.
  verilator -P -E ebaz.v >$odir/ebaz_preproc.v
  cat >$odir/build.tcl <<EOF
    create_project -in_memory -part xc7z010clg400-1
    # uart & ebaz are last so their default_nettype doesn't interfere
    read_verilog -sv {
      pll.v
      ${LCD_DIR}/lcd_video.v
      ${DVI_DIR}/vga.v
      ${DVI_DIR}/tmds_encoder.v ${DVI_DIR}/vga2dvid.v
      hdmi-audio/av_hdmi.v hdmi-audio/encoder.v hdmi-audio/hdmidataencoder.v
      hdmi-audio/hdmidelay.v
      ${UART_DIR}/uart.v
      $odir/ebaz_preproc.v }
    read_xdc ../ebaz.xdc
    read_xdc ebaz.sdc

    synth_design -top top -part xc7z010clg400-1
    report_timing_summary -file $odir/synth_timing_summary.rpt
    report_power -file $odir/synth_power.rpt
    write_checkpoint -force $odir/synthesis

    opt_design
    place_design
    phys_opt_design
    report_timing_summary -file $odir/place_timing_summary.rpt
    write_checkpoint -force $odir/place
    # I cheat on one of the MMCMs:  1207 VCO w/ max 1200
    # If there is a way to turn it into a warning, I can't find the docs
    set_property IS_ENABLED FALSE [get_drc_checks PDRC-34]
    route_design
    # !!!!!!!!!!!!!!!!!!! Crash !!!!!!!!!!!!!!!!!!!!!!!!!!!!
    # Either a seg fault or:
    # free(): invalid pointer
    # Abnormal program termination (6)
    report_timing_summary -file $odir/route_timing_summary.rpt
    report_timing -sort_by group -max_paths 100 -path_type summary -file $odir/route_timing.rpt
    report_clock_utilization -file $odir/clock_util.rpt
    report_utilization -file $odir/route_util.rpt
    report_power -file $odir/route_power.rpt
    report_drc -file $odir/route_drc.rpt
    write_checkpoint -force $odir/route

    write_bitstream -force $odir/ebaz.bit
EOF
  vivado -o -mode batch -nojournal -nolog -source $odir/build.tcl
  ret=$?
  # There seems to be no way to control where this goes
  mv -f tight_setup_hold_pins.txt $odir >/dev/null 2>&1 || :
  mv -f usage_statistics_webtalk.{html,xml} $odir >/dev/null 2>&1
  exit $ret
  ;;
 -n)
  # Build using yosys+nextpnr-xilinx
  # fpgasynth expects xdc in current dir
  # nextpnr barfs on get_nets.  I should fix nextpnr to make it a warning
  rm -f ebaz.xdc # make sure it's not a soft link
  fgrep -v get_nets ../ebaz.xdc > ebaz.xdc
  # FIXME: make this work
  # Currently fails w/ ODDR->IOBUFDS:
  # ERROR: Failed to route arc 0 of net 'genblk1[2].ddr_out', from SITEWIRE/OLOGIC_X0Y96/OUTFF_Q to SITEWIRE/IOB_X0Y95/O_IN.
  fpgasynth -x -o ebaz -t top ebaz.v pll.v \
    ${LCD_DIR}/lcd_video.v \
    ${DVI_DIR}/vga.v \
    ${UART_DIR}/uart.v \
    ${DVI_DIR}/tmds_encoder.v ${DVI_DIR}/vga2dvid.v \
    hdmi-audio/av_hdmi.v hdmi-audio/encoder.v hdmi-audio/hdmidataencoder.v \
    hdmi-audio/hdmidelay.v
  ;;
 *)
  # Build using f4pga (mkebaz)
  ../mkebaz -t top ebaz.v ${LIB_DIR}/ebaz.xdc pll.v ebaz.sdc \
    ${LCD_DIR}/lcd_video.v \
    ${DVI_DIR}/vga.v \
    ${UART_DIR}/uart.v \
    ${DVI_DIR}/tmds_encoder.v ${DVI_DIR}/vga2dvid.v \
    hdmi-audio/av_hdmi.v hdmi-audio/encoder.v hdmi-audio/hdmidataencoder.v \
    hdmi-audio/hdmidelay.v
  ;;
esac
